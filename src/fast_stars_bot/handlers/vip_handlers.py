from aiogram import F, Router, types
from db.session import SessionLocal
from keyboards.vip_keyboard import (
    vip_confirmation_keyboard,
    vip_info_keyboard,
    vip_keyboard,
)
from utils.user_requests import get_user_by_telegram_id
from utils.vip_requests import get_active_vip_subscription, grant_vip, is_user_vip

router = Router()

VIP_PRICE = 99.9


def register_vip_handlers(dp) -> None:
    dp.include_router(router)


@router.callback_query(F.data == "vip_package")
async def vip_info_callback(callback: types.CallbackQuery) -> None:
    telegram_id = callback.from_user.id
    async with SessionLocal() as session:
        user = await get_user_by_telegram_id(session, telegram_id)
        active_vip = await get_active_vip_subscription(session, user.id)

        if active_vip:
            start = active_vip.start_date.strftime("%d.%m.%Y")
            end = active_vip.end_date.strftime("%d.%m.%Y")
            await callback.message.edit_text(
                f"<b>üíé –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å VIP-–ø–æ–¥–ø–∏—Å–∫–∞!</b>\n\n"
                f"–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—Å–∫–∏: <b>{start}</b>\n"
                f"–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: <b>{end}</b>\n\n"
                f"–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –¥–≤–æ–π–Ω—ã–º –±–æ–Ω—É—Å–æ–º –¥–Ω—è, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –æ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏—è—Ö –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–º –≤—ã–≤–æ–¥–æ–º —Å—Ä–µ–¥—Å—Ç–≤!üíé\n\n"
                f"–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏!",
                parse_mode="HTML",
                reply_markup=vip_info_keyboard(),
            )
            return

        await callback.message.edit_text(
            "üíé <b>VIP-–ø–∞–∫–µ—Ç ‚Äî —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö!</b>\n"
            f"–¶–µ–Ω–∞: <b>{VIP_PRICE} ‚≠ê –Ω–∞ 30 –¥–Ω–µ–π</b>.\n"
            "<blockquote>‚ùóÔ∏è–ó–∞ VIP-–ø–∞–∫–µ—Ç –∑–≤—ë–∑–¥—ã —Å–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —Å –∏–≥—Ä–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –≤ –±–æ—Ç–µ!</blockquote>\n\n"
            "<b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ VIP-–ø–∞–∫–µ—Ç–∞:</b>\n"
            "‚ÄÉ1. ‚ú® X2 –∫ –±–æ–Ω—É—Å—É –¥–Ω—è ‚Äî —Ç–≤–æ—è –µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–≤–∞–∏–≤–∞–µ—Ç—Å—è!\n"
            "‚ÄÉ2. ‚è∞ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è ‚Äî –±–æ—Ç –±—É–¥–µ—Ç –ª–∏—á–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ —Å–æ–±—Ä–∞—Ç—å –±–æ–Ω—É—Å –¥–Ω—è.\n"
            "‚ÄÉ3. üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞–Ω–∏—è—Ö ‚Äî –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ, —Ç—ã —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∞–µ—à—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
            "‚ÄÉ‚ÄÉüîπ –ó–∞–¥–∞–Ω–∏—è —á–∞—Å—Ç–æ –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ–≥–æ –Ω–∞ 20‚Äì60 –º–∏–Ω—É—Ç ‚Äî —Å VIP —Ç—ã —É–∑–Ω–∞–µ—à—å –æ –Ω–∏—Ö –ø–µ—Ä–≤—ã–º!\n"
            "‚ÄÉ4. üí∞ –í—ã–ø–ª–∞—Ç—ã –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏ ‚Äî –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–≤–æ–¥ –¥–ª—è –≤—Å–µ—Ö VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n\n"
            "‚úÖ <b>VIP-–ø–∞–∫–µ—Ç = –±–æ–ª—å—à–µ –∑–≤—ë–∑–¥, –±–æ–ª—å—à–µ –∑–∞–¥–∞–Ω–∏–π, –±—ã—Å—Ç—Ä–µ–µ –≤—ã–ø–ª–∞—Ç—ã!</b>\n"
            "–ê–∫—Ç–∏–≤–∏—Ä—É–π –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å –∏ –ø–æ–ª—É—á–∏ –º–∞–∫—Å–∏–º—É–º –æ—Ç –±–æ—Ç–∞!",
            parse_mode="HTML",
            reply_markup=vip_keyboard(),
        )


@router.callback_query(F.data == "buy_vip")
async def buy_vip_callback(callback: types.CallbackQuery) -> None:
    telegram_id = callback.from_user.id
    async with SessionLocal() as session:
        user = await get_user_by_telegram_id(session, telegram_id)

        if user.stars < VIP_PRICE:
            await callback.answer(
                "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ VIP-–ø–∞–∫–µ—Ç–∞! ‚≠êÔ∏è\n"
                "–î–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å.",
                show_alert=True,
            )
            return

        if await is_user_vip(session, user.id):
            await callback.answer(
                "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å VIP-–ø–æ–¥–ø–∏—Å–∫–∞! üíé\n"
                "–í—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å –µ—ë, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤–∞—à–∞ —Ç–µ–∫—É—â–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ—á–µ—Ç.",
                show_alert=True,
            )
            return

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π VIP
        await callback.message.edit_text(
            f"‚ùì –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å VIP —Å—Ç–∞—Ç—É—Å –∑–∞ {VIP_PRICE} ‚≠êÔ∏è?\n"
            "–ü–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≤—Å–µ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.",
            reply_markup=vip_confirmation_keyboard(),
        )


@router.callback_query(F.data == "confirm_vip_purchase")
async def confirm_vip_purchase_callback(callback: types.CallbackQuery) -> None:
    telegram_id = callback.from_user.id
    async with SessionLocal() as session:
        user = await get_user_by_telegram_id(session, telegram_id)
        await grant_vip(session, user)

        await callback.message.answer(
            "‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ VIP —Å—Ç–∞—Ç—É—Å!\n"
            "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –≤—Å–µ–º–∏ –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è–º–∏ VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!\n\n",
            reply_markup=vip_info_keyboard(),
        )
