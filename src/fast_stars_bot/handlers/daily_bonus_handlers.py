import asyncio

from aiogram import F, Router, types
from db.session import SessionLocal
from utils.daily_bonus_requests import claim_daily_bonus
from utils.user_requests import get_user_by_telegram_id

router = Router()


def register_daily_bonus_handlers(dp) -> None:
    dp.include_router(router)


async def delete_later(message: types.Message, delay: int = 10):
    await asyncio.sleep(delay)
    try:
        await message.delete()
    except Exception:
        pass


@router.callback_query(F.data == "daily_bonus")
async def daily_bonus_callback(callback: types.CallbackQuery) -> None:
    telegram_id = callback.from_user.id

    async with SessionLocal() as session:
        try:
            user = await get_user_by_telegram_id(session, telegram_id)
            if not user:
                await callback.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", show_alert=True)
                return
            
            bonus = await claim_daily_bonus(session, user)
            await callback.answer(
                f"–í—ã –ø–æ–ª—É—á–∏–ª–∏ {bonus}‚≠êÔ∏è –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å! üéâ\n\n"
                f"–ë–∞–ª–∞–Ω—Å: {user.stars:.2f}‚≠êÔ∏è",
                show_alert=True,
            )
        except ValueError:
            await callback.answer(
                "–í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –±–æ–Ω—É—Å —Å–µ–≥–æ–¥–Ω—è! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞. ‚è≥", show_alert=True
            )
        except Exception as e:
            await callback.answer("–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", show_alert=True)
            return

        message = await callback.message.answer(
            "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å üéÅ\n\n"
            "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤–∞—à –±–æ–Ω—É—Å —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è!\n\n"
            "‚Ä¢ –°–µ–≥–æ–¥–Ω—è: 0.1 ‚≠êÔ∏è\n"
            "‚Ä¢ –ó–∞–≤—Ç—Ä–∞: 0.2 ‚≠êÔ∏è\n"
            "‚Ä¢ –ü–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞: 0.3 ‚≠êÔ∏è –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.\n\n"
            "üìÖ –ó–∞ 15 –¥–Ω–µ–π –º–æ–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å 12 ‚≠êÔ∏è! –ù–µ –ø—Ä–æ–ø—É—Å–∫–∞–π—Ç–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –º–∞–∫—Å–∏–º—É–º!"
        )

        asyncio.create_task(delete_later(message))